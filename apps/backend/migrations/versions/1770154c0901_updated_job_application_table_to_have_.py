"""updated job application table to have job description and background task id and updated the resume generation status enum

Revision ID: 1770154c0901
Revises: a86803cf5195
Create Date: 2025-08-07 12:04:48.001220

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '1770154c0901'
down_revision: Union[str, None] = 'a86803cf5195'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job_applications', sa.Column('job_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False), schema='app')
    op.add_column('job_applications', sa.Column('background_task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='app')
    op.drop_column('job_applications', 'application_info', schema='app')
    op.sync_enum_values(
        enum_schema='public',
        enum_name='resumegenerationstatus',
        new_values=['STARTED', 'PROCESSING_COMPANY_PROFILE', 'PROCESSING_RESUME_GENERATION', 'COMPLETED', 'FAILED'],
        affected_columns=[TableReference(table_schema='app', table_name='job_applications', column_name='resume_generation_status')],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema='public',
        enum_name='resumegenerationstatus',
        new_values=['PROCESSING_COMPANY_PROFILE', 'PROCESSING_RESUME_GENERATION', 'COMPLETED', 'FAILED'],
        affected_columns=[TableReference(table_schema='app', table_name='job_applications', column_name='resume_generation_status')],
        enum_values_to_rename=[],
    )
    op.add_column('job_applications', sa.Column('application_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True), schema='app')
    op.drop_column('job_applications', 'background_task_id', schema='app')
    op.drop_column('job_applications', 'job_description', schema='app')
    # ### end Alembic commands ###
