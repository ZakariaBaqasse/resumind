"""added events table

Revision ID: 21897c6061c7
Revises: 1770154c0901
Create Date: 2025-08-09 12:45:05.289178

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '21897c6061c7'
down_revision: Union[str, None] = '1770154c0901'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('job_application_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('event_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('step', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tool_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('iteration', sa.Integer(), nullable=True),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('error', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['job_application_id'], ['app.job_applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='app'
    )
    op.create_index(op.f('ix_app_events_event_name'), 'events', ['event_name'], unique=False, schema='app')
    op.create_index(op.f('ix_app_events_job_application_id'), 'events', ['job_application_id'], unique=False, schema='app')
    op.create_index(op.f('ix_app_events_step'), 'events', ['step'], unique=False, schema='app')
    op.drop_table('celery_taskmeta')
    op.drop_table('celery_tasksetmeta')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.drop_index(op.f('ix_app_events_step'), table_name='events', schema='app')
    op.drop_index(op.f('ix_app_events_job_application_id'), table_name='events', schema='app')
    op.drop_index(op.f('ix_app_events_event_name'), table_name='events', schema='app')
    op.drop_table('events', schema='app')
    # ### end Alembic commands ###
