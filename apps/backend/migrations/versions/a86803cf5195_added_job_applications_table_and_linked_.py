"""added job applications table and linked it with user table

Revision ID: a86803cf5195
Revises: 43cef04e082e
Create Date: 2025-07-20 23:40:10.367733

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "a86803cf5195"
down_revision: Union[str, None] = "43cef04e082e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute("CREATE SCHEMA IF NOT EXISTS app")
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "PROCESSING_COMPANY_PROFILE",
        "PROCESSING_RESUME_GENERATION",
        "COMPLETED",
        "FAILED",
        name="resumegenerationstatus",
    ).create(op.get_bind())
    op.create_table(
        "job_applications",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("job_title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("company_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("application_info", sa.JSON(), nullable=True),
        sa.Column("company_profile", sa.JSON(), nullable=True),
        sa.Column("generated_resume", sa.JSON(), nullable=True),
        sa.Column("original_resume_snapshot", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "resume_generation_status",
            postgresql.ENUM(
                "PROCESSING_COMPANY_PROFILE",
                "PROCESSING_RESUME_GENERATION",
                "COMPLETED",
                "FAILED",
                name="resumegenerationstatus",
                create_type=False,
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["auth.user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="app",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("job_applications", schema="app")
    sa.Enum(
        "PROCESSING_COMPANY_PROFILE",
        "PROCESSING_RESUME_GENERATION",
        "COMPLETED",
        "FAILED",
        name="resumegenerationstatus",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
