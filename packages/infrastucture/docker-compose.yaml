services:
  postgres:
    image: pgvector/pgvector:pg16
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    volumes:
      - resumind-postgres-data:/var/lib/postgresql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_USER: ${DB_USER:-root}
      POSTGRES_DB: ${DB_NAME:-app}
    ports:
      - "${DB_PORT:-54322}:5432"
  redis:
    image: redis:7
    restart: always
    command: >
      --requirepass ${REDIS_AUTH:-myredissecret}
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  # Celery worker
  celery-worker:
    build:
      context: ../../apps/backend
      dockerfile: ./Dockerfile.celery
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=${CELERY_DATABASE_URL:-postgresql://root:password@postgres:5432/thinkable-prototype}
      - CELERY_BROKER_URL=redis://default:myredissecret@redis:6379
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONIOENCODING=utf-8
      # OpenAI
      - TAVILY_API_KEY=${TAVILY_API_KEY:-}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY:-}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY:-}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY:-}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY:-}
      - CELERY_WORKER_NAME=celery
      - CELERY_TASK_SERIALIZER=${CELERY_TASK_SERIALIZER:-json}
      - CELERY_TASK_IGNORE_RESULT=${CELERY_TASK_IGNORE_RESULT:-true}
      - PYTHONPATH=/app
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
    restart: unless-stopped
    volumes:
      - ../../apps/backend/src:/app/src
      - ../../logs:/app/logs
    command: celery -A src.celery_app worker -E -l INFO -Q generate_resume -O fair --concurrency=8
    shm_size: 2gb

  backend-server:
    build:
      context: ../../apps/backend
      dockerfile: ./Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL:-}
      - CELERY_BROKER_URL=redis://default:myredissecret@redis:6379
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONIOENCODING=utf-8
      - TAVILY_API_KEY=${TAVILY_API_KEY:-}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY:-}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY:-}
      - LANGFUSE_HOST=${LANGFUSE_HOST:-}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY:-}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY:-}
      - CELERY_WORKER_NAME=celery
      - CELERY_TASK_SERIALIZER=${CELERY_TASK_SERIALIZER:-json}
      - CELERY_TASK_IGNORE_RESULT=${CELERY_TASK_IGNORE_RESULT:-true}
      - PYTHONPATH=/app
      - FRONTEND_URL=http://localhost:3000
      - JWT_SECRET=CalfXE/2rxGXREX+MoA2NF9p+EQ9tQ+JsV6zXd4Y5tA=
      - JWT_ALGORITHM=HS256
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ../../apps/backend/src:/app/src
      - ../../logs:/app/logs
    command: "uvicorn src.main:app --host 0.0.0.0 --port 8000"
    shm_size: 2gb

  flower:
    build:
      context: ../../apps/backend
      dockerfile: ./Dockerfile.celery
    command: celery -A src.celery_app flower --address=0.0.0.0
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://default:myredissecret@redis:6379
      - DATABASE_URL=${DATABASE_URL:-postgresql://root:password@postgres:5432/thinkable-prototype}
    depends_on:
      redis:
        condition: service_healthy
volumes:
  resumind-postgres-data:
